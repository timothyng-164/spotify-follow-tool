{"version":3,"sources":["api/apiUtils/authUtils.js","api/auth.js","components/util/commonStyle.js","components/loginButton.js","components/artistItem.js","components/util/setAllArtistChecked.js","components/artistContainer.js","api/apiUtils/requestConfig.js","api/apiUtils/chunkArray.js","api/follow.js","components/followButtons.js","api/getArtists.js","components/menuContainer.js","components/mainPage.js","components/callbackRedirect.js","App.js","index.js"],"names":["TOKEN_KEY","STATE_KEY","checkAuth","setAuthenticated","params","e","hashParams","r","q","window","location","hash","substring","exec","console","log","decodeURIComponent","getHashParams","access_token","state","storedState","localStorage","getItem","setItem","removeItem","clearAuth","authRedirect","event","preventDefault","length","text","possible","i","charAt","Math","floor","random","generateRandomString","url","encodeURIComponent","process","style","loadImage","src","width","className","alt","LoginButton","onClick","ArtistItem","id","artistMap","setArtistMap","get","checked","following","artistMapTemp","Map","artist","Object","assign","set","type","name","href","uri","setAllArtistChecked","document","querySelector","entries","key","value","ArtistContainer","artistItems","Array","from","values","map","size","display","scope","onChange","target","requestConfig","method","reqUrl","token","headers","chunkArray","arr","chunkSize","chunks","len","push","slice","axios","require","followRequest","requestUrl","a","followRequestWithIdList","artistIdList","artistIdStr","join","deleteFollows","artistIds","response","status","putFollows","getFollows","followIds","data","artists","items","item","next","FollowButtons","useState","putLoading","setPutLoading","deleteLoading","setDeleteLoading","getCheckedArtistIds","flatMap","setArtistFollow","tempArtistMap","checkedArtists","disabled","parseArtistsFromTracks","track","getNext","parseArtistsFromAlbums","album","parseArtistsFromFollowed","getNextFromFollowed","getArtistMap","startUrl","parseResponseFunction","getNextFunction","getArtists","followed","trackArtists","albumArtists","followedArtists","followedIds","MenuContainer","updateLoading","setUpdateLoading","fromTracks","fromAlbums","fromFollowed","artistMapResp","defaultChecked","htmlFor","App","authenticated","CallbackRedirect","to","useEffect","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e9c8b687.chunk.js","sourcesContent":["/**\n * Obtains parameters from the hash of the URL\n * @return Object\n */\n\nconst TOKEN_KEY = 'access_token'\nconst STATE_KEY = 'spotify_auth_state';\nconst CLIENT_ID = process.env.REACT_APP_SPOTIFY_CLIENT_ID; \n// '4e3f7aa0c77e44e09d1b7778b4f63ad7'\nconst REDIRECT_URL = process.env.REACT_APP_SPOTIFY_REDIRECT_URL; \n// 'http://localhost:3000/callback'\nconst SCOPE = 'user-follow-modify user-library-read user-follow-read';\n\n\nconst getHashParams = () => {\n    var hashParams = {};\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    while (e = r.exec(q)) {\n        console.log('e', e)\n        hashParams[e[1]] = decodeURIComponent(e[2]);\n    }\n    return hashParams;\n}\n\n/**\n * Generates a random string containing numbers and letters\n * @param  {number} length The length of the string\n * @return {string} The generated string\n */\nconst generateRandomString = (length) => {\n    var text = '';\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (var i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n};\n\n\nexport { \n    TOKEN_KEY, STATE_KEY, CLIENT_ID, REDIRECT_URL, SCOPE,\n    getHashParams, generateRandomString \n}\n","import { \n    TOKEN_KEY, STATE_KEY, CLIENT_ID, REDIRECT_URL, SCOPE,\n    getHashParams, generateRandomString } \n    from './apiUtils/authUtils'\n\nfunction checkAuth(setAuthenticated) {\n    const params = getHashParams();\n\n    const access_token = params.access_token\n    const state = params.state\n    const storedState = localStorage.getItem(STATE_KEY)\n\n    if (access_token) {\n        localStorage.setItem(TOKEN_KEY, access_token)\n        setAuthenticated(true)\n        console.log('Set access token')\n    }\n    \n    if (access_token && (state == null || state !== storedState)) {\n        console.log('Attempting to access without state')\n        setAuthenticated(false)\n    } \n    else {\n        console.log('Removing state key')\n        localStorage.removeItem(STATE_KEY);\n    }\n}\n\nfunction clearAuth(setAuthenticated) {\n    // logout url: https://accounts.spotify.com/en/logout\n    localStorage.removeItem(TOKEN_KEY)\n    setAuthenticated(false)\n}\n\nfunction authRedirect(event) {\n    event.preventDefault();\n    var state = generateRandomString(16);\n\n    localStorage.setItem(STATE_KEY, state);\n\n    var url = 'https://accounts.spotify.com/authorize';\n    url += '?response_type=token';\n    url += '&client_id=' + encodeURIComponent(CLIENT_ID);\n    url += '&scope=' + encodeURIComponent(SCOPE);\n    url += '&redirect_uri=' + encodeURIComponent(REDIRECT_URL);\n    url += '&state=' + encodeURIComponent(state);\n\n    console.log('redirect url', url)\n    window.location = url;\n}\n\n\nexport {\n    checkAuth,\n    clearAuth,\n    authRedirect\n}","const style = {\n  button: \"rounded-pill px-3 py-2 font-weight-bold mx-2\"\n}\n\nconst loadImage = <img src={'./images/loading-svgrepo-com.svg'} length='20' width='20' className=\"load-img ml-2\" alt=\"loading-icon\"></img>\n\n\n\nexport {\n  style,\n  loadImage\n}\n\n\n\n","import React from \"react\";\nimport { authRedirect} from '../api/auth'\nimport { style } from './util/commonStyle'\n\nconst LoginButton = ({setAuthenticated}) => {\n    function handleClick(event) {\n        authRedirect(event)\n        setAuthenticated(true)\n    }\n    return (\n        <button onClick={handleClick} className={`btn-success ${style.button}`}>Login</button>\n    )\n};\n\nexport default LoginButton;","import React from \"react\";\nimport '../styles/artistItem.css'\n\nconst ArtistItem = ({id, artistMap, setArtistMap}) => {\n    function handleCheckChange() {\n        let artistMapTemp = new Map(artistMap)\n        let artist = artistMap.get(id)\n        artist = Object.assign(artist, {'checked': !artistMap.get(id).checked})\n        artistMapTemp.set(id, artist)\n        setArtistMap(artistMapTemp)\n    }\n    \n    function rowColor() {\n        if (artistMap.get(id).checked) return \"row-checked\"\n        return artistMap.get(id).following ? \"row-following\" : \"row-not-following\"\n    }\n\n    return (\n        <tr className={rowColor()} onClick={handleCheckChange}>\n            <td>\n                <input \n                    type=\"checkbox\"\n                    className=\"checkbox checkbox-artist\" \n                    // onChange={handleCheckChange}\n                    checked={artistMap.get(id).checked}\n                ></input>\n            </td>\n            <td>{artistMap.get(id).name}</td>\n            <td>{artistMap.get(id).following ? \"Following\" : \"Not Following\"}</td>\n            <td><a href={artistMap.get(id).uri}>Link</a></td>\n        </tr>\n    )\n};\n\nexport default ArtistItem;","export function setAllArtistChecked(checked, artistMap, setArtistMap) {\n    let artistMapTemp = new Map(artistMap)\n    document.querySelector('.checkbox-all-artist').checked = checked\n    for (const [key, value] of artistMap.entries()) {\n        artistMapTemp.set(key, Object.assign(value, {'checked': checked}))\n    }\n    setArtistMap(artistMapTemp)\n}","import React from \"react\";\nimport ArtistItem from './artistItem'\nimport { setAllArtistChecked } from './util/setAllArtistChecked'\nimport '../styles/artistContainer.css'\n\nconst ArtistContainer = ({ artistMap, setArtistMap }) => {\n    let artistItems = Array.from(artistMap.values()).map((artist) =>\n        <ArtistItem\n            key={artist.id}\n            id={artist.id}\n            artistMap={artistMap}\n            setArtistMap={setArtistMap}\n        ></ArtistItem>\n    )\n\n    function selectAll(event) {\n        setAllArtistChecked(event.target.checked, artistMap, setArtistMap)\n    }\n\n    return (\n        // todo: apply table sorting\n        <div className=\"artist-container my-5 \">     \n            <table \n                className=\"table table-dark m-0 mx-auto\" \n                style={artistMap.size < 1 ? {display: 'none'} : null}>\n                <thead>\n                    <tr>\n                        <th scope=\"col\">\n                            <input\n                                type=\"checkbox\"\n                                className=\"checkbox-all-artist\"\n                                onChange={selectAll}\n                            ></input>\n                        </th>\n                        <th scope=\"col\">Artist</th>\n                        <th scope=\"col\">Following</th>\n                        <th scope=\"col\">Link</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {artistItems}\n                </tbody>\n            </table>\n        </div>\n    )\n};\n\nexport default ArtistContainer;","export function requestConfig(method, reqUrl, token) {\n    return {\n        method: method,\n        url: reqUrl,\n        headers: { \n          'Accept': 'application/json', \n          'Content-Type': 'application/json', \n          'Authorization': `Bearer ${token}`,\n        }\n    }\n}","export function chunkArray(arr, chunkSize) {\n    var chunks = []\n    if (chunkSize <= 0) return chunks\n    for (var i=0,len=arr.length; i<len; i+=chunkSize)\n      chunks.push(arr.slice(i,i+chunkSize))\n    return chunks\n}\n","import { TOKEN_KEY } from './apiUtils/authUtils'\nimport { requestConfig } from './apiUtils/requestConfig'\nimport { chunkArray } from './apiUtils/chunkArray'\nlet axios = require('axios');\n\nconst pageLimit = 50\n\n\nasync function followRequest(method, requestUrl) {\n    const token = localStorage.getItem(TOKEN_KEY)\n    return await axios(requestConfig(method, requestUrl, token))\n}\n\nasync function followRequestWithIdList(method, artistIdList) {\n    let artistIdStr = artistIdList.join(',')\n    return await followRequest(method, `https://api.spotify.com/v1/me/following?type=artist&ids=${artistIdStr}`)\n}\n\n\n// ---------------------------------------------\nasync function deleteFollows(artistIdList) {\n    console.log('delete follow request')\n    try {\n        for (let artistIds of chunkArray(artistIdList, pageLimit)) {\n            console.log('unfollowing artists', artistIdList)\n            await followRequestWithIdList('delete', artistIds)\n        }\n    } catch (error) {\n        if (error.response.status === 401) throw error\n    }\n}\n\nasync function putFollows(artistIdList) {\n    console.log('put follow request')\n    try {\n        for (let artistIds of chunkArray(artistIdList, pageLimit)) {\n            console.log('following artists', artistIdList)\n            await followRequestWithIdList('put', artistIds)\n        }\n    } catch (error) {\n        if (error.response.status === 401) throw error\n    }\n}\n\nasync function getFollows() {\n    let followIds = []\n    try {\n        let reqUrl = 'https://api.spotify.com/v1/me/following?type=artist&limit=50'\n        while(reqUrl) {\n            let response = await followRequest('get', reqUrl)\n            console.log('Retreived followed artists', response)\n            for (let item of response.data.artists.items) {\n                followIds.push(item.id)\n            }\n            reqUrl = response.data.artists.next\n        }\n        console.log('all followed ids', followIds)\n    } catch (error) {\n        if (error.response.status === 401) throw error\n    }\n    return followIds\n}\n\n\nexport {\n    deleteFollows, putFollows, getFollows\n}\n","import React, { useState } from 'react'\nimport { style, loadImage } from './util/commonStyle'\nimport { deleteFollows, putFollows } from '../api/follow'\nimport { clearAuth } from '../api/auth'\n\nconst FollowButtons = ({artistMap, setArtistMap, setAuthenticated}) => {\n    const [putLoading, setPutLoading] = useState(false)\n    const [deleteLoading, setDeleteLoading] = useState(false)\n\n    function getCheckedArtistIds() {\n        return Array.from(artistMap.values()).flatMap((artist) => {\n           return artist.checked ? artist.id : []\n        })\n    }\n\n    function setArtistFollow(artistIdList, following) {\n        let tempArtistMap = new Map(artistMap)\n        for (const id of artistIdList) {\n            const artist = artistMap.get(id)\n            tempArtistMap.set(id, Object.assign(artist, {'following': following}))\n        }\n        setArtistMap(tempArtistMap)\n    }\n    \n    async function deleteCheckedFromFollowed() {\n        setDeleteLoading(true)\n        const checkedArtists = getCheckedArtistIds();\n        setArtistFollow(checkedArtists, false)\n        try {\n            await deleteFollows(checkedArtists)\n        } catch (error) {\n            if (error.response.status === 401) {\n                clearAuth(setAuthenticated)\n                setDeleteLoading(false)\n            }\n        }\n        setDeleteLoading(false)\n    }\n\n    async function putCheckedFromFollowed() {\n        setPutLoading(true)\n        const checkedArtists = getCheckedArtistIds();\n        setArtistFollow(checkedArtists, true)\n        try {\n            await putFollows(checkedArtists)\n        } catch (error) {\n            if (error.response.status === 401) {\n                clearAuth(setAuthenticated)\n                setPutLoading(false)                \n            }\n        }\n        setPutLoading(false)\n    }\n\n\n    return (\n        <div className=\"row follow-container col-12\">\n            <div className=\"mx-auto\">\n                <button onClick={putCheckedFromFollowed} className={`btn-success ${style.button}`} disabled={putLoading || deleteLoading}>\n                    Follow\n                    {putLoading && loadImage}\n                </button>\n                <button onClick={deleteCheckedFromFollowed} className={`btn-danger ${style.button}`} disabled={putLoading || deleteLoading}>\n                    Unfollow\n                    {deleteLoading && loadImage}\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default FollowButtons;","import { TOKEN_KEY } from './apiUtils/authUtils'\nimport { requestConfig } from './apiUtils/requestConfig'\nimport { getFollows } from './follow'\nlet axios = require('axios');\n\n// parseArtistsFromTracks\nfunction parseArtistsFromTracks(response) {\n    let artistMap = new Map()\n    for (let items of response.data.items) {\n        let track = items.track\n        for (let artist of track.artists) {\n            artistMap.set(artist.id, { \n                'id': artist.id,\n                'name': artist.name,\n                'uri': artist.uri\n            })\n        }\n    }\n    return artistMap\n}\n\nfunction getNext(response) {\n    return response.data.next \n}\n\n// parseArtistsFromAlbums\nfunction parseArtistsFromAlbums(response) {\n    let artistMap = new Map()\n    for (let items of response.data.items) {\n        let album = items.album\n        for (let artist of album.artists) {\n            artistMap.set(artist.id, { \n                'id': artist.id,\n                'name': artist.name,\n                'uri': artist.uri\n            })\n        }\n    }\n    return artistMap\n}\n\n// parseArtistsFromFollowed\nfunction parseArtistsFromFollowed(response) {\n    let artistMap = new Map()\n    for (let artist of response.data.artists.items) {\n        artistMap.set(artist.id, { \n            'id': artist.id,\n            'name': artist.name,\n            'uri': artist.uri\n        })\n    }\n    return artistMap\n}\n\nfunction getNextFromFollowed(response) {\n    return response.data.artists.next\n}\n\n\n// -----------------------------------------------\nasync function getArtistMap(startUrl, parseResponseFunction, getNextFunction) {\n    let artistMap = new Map()\n    try {\n        const token = localStorage.getItem(TOKEN_KEY)\n        let requestUrl = startUrl\n        while(requestUrl) {\n            // console.log(requestUrl)\n            var response = await axios(requestConfig('get', requestUrl, token))\n            artistMap = new Map([...artistMap, ...parseResponseFunction(response)])\n            requestUrl = getNextFunction(response)\n        }\n    } catch (error) {\n        // todo: handle 429 for large libraries\n        // todo: on unknown exceptions, throw error and display page\n        if (error.response.status === 401) throw error\n    }\n    return artistMap;\n}\n\nasync function getArtists(track, album, followed) {\n    let artistMap = new Map()\n    if (track) {\n        let trackArtists = await getArtistMap('https://api.spotify.com/v1/me/tracks?offset=0&limit=50', parseArtistsFromTracks, getNext)\n        // let trackArtists = await getArtistMap('https://api.spotify.com/v1/me/tracks?offset=4868&limit=50', parseArtistsFromTracks, getNext)\n        // todo: update offset and limit\n        artistMap = new Map([...artistMap, ...trackArtists])\n    }\n    if (album) {\n        let albumArtists = await getArtistMap('https://api.spotify.com/v1/me/albums?offset=0&limit=50', parseArtistsFromAlbums, getNext)\n        // let albumArtists = await getArtistMap('https://api.spotify.com/v1/me/albums?offset=773&limit=50', parseArtistsFromAlbums, getNext)\n        artistMap = new Map([...artistMap, ...albumArtists])\n    }\n    if (followed) {\n        let followedArtists = await getArtistMap('https://api.spotify.com/v1/me/following?type=artist&limit=50', parseArtistsFromFollowed, getNextFromFollowed)\n        // let followedArtists = await getArtistMap('https://api.spotify.com/v1/me/following?type=artist&limit=50&after=7w07HHCXBP3D7XJtK3BHi3', parseArtistsFromFollowed, getNextFromFollowed)\n        artistMap = new Map([...artistMap, ...followedArtists])\n    }\n    \n    for (const [key, value] of artistMap.entries()) {\n        artistMap.set(key, Object.assign(value, {'following': false, 'checked': false}))\n    }\n\n    const followedIds = await getFollows()\n    for (const id of followedIds) {\n        let artist = artistMap.get(id)\n        if (!artist) continue\n        artistMap.set(id, Object.assign(artist, {'following': true}))\n    }\n    \n    return artistMap\n}\n\n\nexport {\n    getArtists\n}\n\n","import React, { useState } from \"react\";\nimport FollowButtons from './followButtons'\nimport { getArtists } from '../api/getArtists';\nimport { setAllArtistChecked } from './util/setAllArtistChecked'\nimport { clearAuth } from '../api/auth'\nimport { style, loadImage } from './util/commonStyle'\nimport '../styles/menuContainer.css'\n\nconst MenuContainer = ({artistMap, setArtistMap, setAuthenticated}) => {\n    const [updateLoading, setUpdateLoading] = useState(false)\n\n    async function getArtistClick() {\n        setUpdateLoading(true)\n        const fromTracks = document.querySelector('#checkbox-tracks').checked\n        const fromAlbums = document.querySelector('#checkbox-albums').checked\n        const fromFollowed = document.querySelector('#checkbox-followed').checked\n        let artistMapResp = new Map()\n        try {\n            artistMapResp = await getArtists(fromTracks, fromAlbums, fromFollowed)\n        } catch (error) {\n            if (error.response.status === 401) {\n                clearAuth(setAuthenticated)\n                setUpdateLoading(false)\n                return\n            }\n        }\n        setAllArtistChecked(false, artistMapResp, setArtistMap)\n        setUpdateLoading(false)\n    }\n    \n\n    // todo: show number of selected artists\n    return (\n        <div className=\"menu-container\">\n            <div className=\"row col-12 my-3\">\n                <div className=\"mx-auto\">\n                    <button id=\"button-update-artists\" onClick={getArtistClick} className={`btn-success ${style.button}`} disabled={updateLoading}>\n                        Get Artists\n                        { updateLoading && loadImage }\n                    </button>\n                </div>\n            </div>\n            <div className=\"row col-12 my-3\">\n                <div className=\"mx-auto d-flex\">\n                    <div className=\"artist-option\">\n                        <input type=\"checkbox\" id=\"checkbox-tracks\" defaultChecked={true} className=\"mx-1\"></input>\n                        <label htmlFor=\"checkbox-tracks\" className=\"mr-3\">Saved Tracks</label>\n                    </div>\n                    <div className=\"artist-option\">\n                        <input type=\"checkbox\" id=\"checkbox-albums\" defaultChecked={true} className=\"mx-1\"></input>\n                        <label htmlFor=\"checkbox-albums\" className=\"mr-3\">Saved Albums</label>\n                    </div>\n                    <div className=\"artist-option\">\n                        <input type=\"checkbox\" id=\"checkbox-followed\" defaultChecked={true} className=\"mx-1\"></input>\n                        <label htmlFor=\"checkbox-followed\" className=\"mr-3\">Followed Artists</label>\n                    </div>\n                </div>\n            </div>\n            { artistMap.size > 0 &&\n            <FollowButtons artistMap={artistMap} setArtistMap={setArtistMap} setAuthenticated={setAuthenticated}></FollowButtons>}\n        </div>\n    )\n};\n\nexport default MenuContainer;","import React from \"react\";\nimport LoginButton from './loginButton'\nimport ArtistContainer from './artistContainer'\nimport MenuContainer from './menuContainer'\nimport LogoutButton from './logoutButton'\nimport DebugButton from './debugButton'\nimport '../styles/mainPage.css'\n\n\nconst App = ({ artistMap, setArtistMap, authenticated, setAuthenticated }) => {\n    return (\n        <div className=\"main-page mt-5\">\n            <div className=\"menu-container col-7 mx-auto p-4 border border-secondary rounded\">\n                {/* { authenticated &&\n                <div className=\"row col-12 justify-content-end\">\n                    <DebugButton artistMap={artistMap} className=\"col-2\"></DebugButton>\n                    <LogoutButton setAuthenticated={setAuthenticated} className=\"col-2\"></LogoutButton>\n                </div> } */}\n                <h1>Spotify Follow Tool</h1>\n                {/* todo: fill in description */}\n                <p>{}</p>\n                { authenticated ? \n                <div className=\"page app-container\">\n                    <MenuContainer artistMap={artistMap} setArtistMap={setArtistMap} setAuthenticated={setAuthenticated}></MenuContainer>\n                </div> : \n                <div className=\"page login-container\">\n                    <LoginButton setAuthenticated={setAuthenticated}></LoginButton>\n                </div> }\n            </div>\n\n            { authenticated && \n            <ArtistContainer artistMap={artistMap} setArtistMap={setArtistMap}></ArtistContainer>}\n        </div>\n\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport { checkAuth } from '../api/auth'\nimport { Redirect } from \"react-router-dom\";\n\n\nconst CallbackRedirect = ({setAuthenticated}) => {\n    return (\n        <>\n            {checkAuth(setAuthenticated)}\n            <Redirect push to='/' />\n        </>\n    );\n}\n\n\nexport default CallbackRedirect;\n","import React, {useState, useEffect}  from \"react\";\nimport MainPage from './components/mainPage'\nimport './App.css';\nimport { TOKEN_KEY } from './api/apiUtils/authUtils'\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport CallbackRedirect from './components/callbackRedirect'\n\n\nconst App = () => {\n  const [artistMap, setArtistMap] = useState(new Map())\n  const [authenticated, setAuthenticated] = useState(localStorage.getItem(TOKEN_KEY) != null)\n\n  useEffect(() => {\n    setAuthenticated(localStorage.getItem(TOKEN_KEY) != null)\n  })\n\n  return (\n    <div className=\"App\">\n      <MainPage \n        artistMap={artistMap}\n        setArtistMap={setArtistMap}\n        authenticated={authenticated}\n        setAuthenticated={setAuthenticated}\n      ></MainPage>\n      <BrowserRouter>\n        <Route path='/callback'>\n          <CallbackRedirect setAuthenticated={setAuthenticated}></CallbackRedirect>\n        </Route>\n      </BrowserRouter> \n      {/* todo: put footer at bottom */}\n      <footer className='m-4'>\n        <a href=\"https://github.com/timothyng-164/spotify-follow-tool\" >\n          <img src={'./images/GitHub-Mark-Light-64px.png'} length='30' width='30'></img>\n        </a>\n      </footer>\n    </div>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App></App>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}